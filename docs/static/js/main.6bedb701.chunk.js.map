{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleInputClear","onSubmit","e","preventDefault","trim","length","catgs","type","value","onChange","target","onClick","getGifs","a","category","url","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","id","titulo","title","GifGridItem","className","src","alt","GifGrid","loading","setImages","useEffect","setTimeout","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAQvCC,EAAmB,WACrBD,EAAc,KAYlB,OACI,sBAAME,SAVW,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCN,MAMJ,SACI,uBACIO,KAAK,OACLC,MAASV,EACTW,SAtBc,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,QAsBfG,QAASX,O,uBC9BZY,EAAO,uCAAG,kDAAAC,EAAA,6DAAOC,EAAP,+BAAgB,OAG7BC,EAHa,uDAEJ,mCAFI,cAGqDD,EAHrD,gDAKME,MAAMD,GALZ,cAKbE,EALa,gBAMIA,EAAUC,OANd,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAO,IAAD,EACzB,MAAO,CACHP,IAAG,UAAEO,EAAIC,cAAN,aAAE,EAAYC,iBAAiBT,IAClCU,GAAIH,EAAIG,GACRC,OAAQJ,EAAIK,UAXD,kBAgBZP,GAhBY,4CAAH,qDCWLQ,EARY,SAAC,GAAmB,IAAlBF,EAAiB,EAAjBA,OAAQX,EAAS,EAATA,IACjC,OACI,sBAAKc,UAAU,2CAAf,UACQ,qBAAKC,IAAKf,EAAKgB,IAAKL,IACpB,4BAAIA,QCwBLM,EAzBC,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECHJ,SAACA,GAAc,IAAD,EAEVjB,mBACxB,CACIsB,KAAM,GACNc,SAAS,IALqB,mBAE/BV,EAF+B,KAEvBW,EAFuB,KAwBtC,OAdIC,qBAAU,WACNC,YAAW,WAEPxB,EAAQE,GACPuB,MAAK,SAACC,GAAD,OAAQJ,EAAU,CACpBf,KAAMmB,EACNL,SAAS,SAGd,OACL,CAACnB,IAIAS,EDjBwBgB,CAAazB,GAAhCS,EAJgB,EAIrBJ,KAAac,EAJQ,EAIRA,QAEpB,OACI,qCACI,6BAAKnB,IACJmB,GAAW,mBAAGJ,UAAU,oCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEQN,EAAOF,KAAI,YAAsB,IAApBI,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,OAAQX,EAAO,EAAPA,IACrB,OACI,8BACA,cAAC,EAAD,CAAaW,OAAQA,EAAQX,IAAKA,KADxBU,YEqBvBe,EApCM,WAAI,MAIe3C,mBAAS,IAJxB,mBAId4C,EAJc,KAIF7C,EAJE,KAYrB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,8BAEQ6C,EAAWpB,KAAI,SAAAP,GACX,OACI,cAAC,EAAD,CAEIA,SAAUA,GADLA,QAQzB,cAAC,EAAD,Q,MC7BZ4B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.6bedb701.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleInputClear = ()=>{\n        setInputValue('')\n    }\n\n    const handleSubmit = (e)=>{\n        e.preventDefault()\n        if( inputValue.trim().length > 2){\n            setCategories((catgs)=>[ inputValue, ...catgs])\n            handleInputClear()\n        }\n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value= { inputValue }\n                onChange={handleInputChange}\n                onClick={handleInputClear}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category=\"saul\")=>{\n \n    const apikey = 'uNJ7kmUimjijmBlTelVe07tRz7yEonUx'\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apikey}&q=${category}&limit=10&offset=0&rating=g&lang=en`\n\n    const respuesta =  await fetch(url)\n    const { data } = await respuesta.json()\n    const gifs = data.map((img)=>{\n        return {\n            url: img.images?.downsized_medium.url,\n            id: img.id,\n            titulo: img.title\n        }\n    })\n\n  \n    return gifs;\n\n}\n ","import React from 'react'\n\n\nexport const GifGridItem = ({titulo, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n                <img src={url} alt={titulo}/>\n                <p>{titulo}</p>\n        </div>\n    )\n}\nexport default GifGridItem;\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\n\n\nconst GifGrid = ({category}) => {\n    \n\n\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (   \n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__animated animate__shakeY\">Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(({id, titulo, url})=>{\n                        return (\n                            <div key={id}>\n                            <GifGridItem titulo={titulo} url={url}/>\n                        </div>\n                    )\n                }) }\n            </div>\n        </>\n        \n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react'\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n    const [images, setImages] = useState(\n        {\n            data: [],\n            loading: true\n        }\n    )\n\n   \n        useEffect(()=>{\n            setTimeout(()=>{\n\n                getGifs(category)\n                .then((imgs)=>setImages({\n                    data: imgs,\n                    loading: false\n                }) );\n                \n            }, 1000)\n        },[category])  \n\n\n\n    return images;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid'\n\n\nconst GifExpertApp = ()=>{\n\n/*     const categories = ['One Punch', 'Samurai X', 'Dragon Ball']; */\n\n    const [categories, setCategories] = useState([])\n\n /*    const handleAdd = (nuevaSerie)=>{\n        setCategories(()=> [...categories, nuevaSerie])\n    } */\n\n\n\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n            <div>\n                {\n                    categories.map(category => {\n                        return (\n                            <GifGrid \n                                key={category} \n                                category={category}\n                            />\n                        )\n                        \n                    })\n                }\n            </div>\n            <GifGrid/>\n            \n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}